return {
	-- "ibhagwan/fzf-lua",
	-- -- optional for icon support
	-- dependencies = { "nvim-tree/nvim-web-devicons" },
	-- -- or if using mini.icons/mini.nvim
	-- -- dependencies = { "echasnovski/mini.icons" },
	--
	-- keymap = {
	-- 	-- Below are the default binds, setting any value in these tables will override
	-- 	-- the defaults, to inherit from the defaults change [1] from `false` to `true`
	-- 	builtin = {
	-- 		-- neovim `:tmap` mappings for the fzf win
	-- 		-- true,        -- uncomment to inherit all the below in your custom config
	-- 		["<M-Esc>"] = "hide", -- hide fzf-lua, `:FzfLua resume` to continue
	-- 		-- ["<F1>"] = "toggle-help",
	-- 		-- ["<F2>"] = "toggle-fullscreen",
	-- 		-- -- Only valid with the 'builtin' previewer
	-- 		-- ["<F3>"] = "toggle-preview-wrap",
	-- 		["<F3>"] = "toggle-preview-wrap",
	-- 		["<F4>"] = "toggle-preview",
	-- 		-- Rotate preview clockwise/counter-clockwise
	-- 		["<F5>"] = "toggle-preview-ccw",
	-- 		["<F6>"] = "toggle-preview-cw",
	-- 		-- `ts-ctx` binds require `nvim-treesitter-context`
	-- 		-- ["<F7>"] = "toggle-preview-ts-ctx",
	-- 		-- ["<F8>"] = "preview-ts-ctx-dec",
	-- 		-- ["<F9>"] = "preview-ts-ctx-inc",
	-- 		["<S-Left>"] = "preview-reset",
	-- 		["<S-down>"] = "preview-page-down",
	-- 		["<S-up>"] = "preview-page-up",
	-- 		["<M-S-down>"] = "preview-down",
	-- 		["<M-S-up>"] = "preview-up",
	-- 	},
	-- 	fzf = {
	-- 		-- fzf '--bind=' options
	-- 		-- true,        -- uncomment to inherit all the below in your custom config
	-- 		["ctrl-z"] = "abort",
	-- 		["ctrl-u"] = "unix-line-discard",
	-- 		["ctrl-f"] = "half-page-down",
	-- 		["ctrl-b"] = "half-page-up",
	-- 		["ctrl-a"] = "beginning-of-line",
	-- 		["ctrl-e"] = "end-of-line",
	-- 		["alt-a"] = "toggle-all",
	-- 		["alt-g"] = "first",
	-- 		["alt-G"] = "last",
	-- 		-- Only valid with fzf previewers (bat/cat/git/etc)
	-- 		["f3"] = "toggle-preview-wrap",
	-- 		["f4"] = "toggle-preview",
	-- 		["shift-down"] = "preview-page-down",
	-- 		["shift-up"] = "preview-page-up",
	-- 	},
	-- },
	--
	-- opts = {},
	-- config = function()
	-- 	local fzf_lua = require("fzf-lua")
	-- 	fzf_lua.register_ui_select()
	-- 	-- builtin
	-- 	vim.keymap.set("n", "<leader>ff", function()
	-- 		fzf_lua.files({
	-- 			cwd_prompt = false,
	-- 		})
	-- 	end, { desc = "fzf-lua: Find files in current directory" })
	--
	-- 	-- vim.keymap.set("n", "<leader>fc", function()
	-- 	--     fzf_lua.find_files({
	-- 	--         cwd = vim.fn.expand("%:p:h"),
	-- 	--         hidden = true,
	-- 	--     })
	-- 	-- end, { desc = "Telescope: Find files in current directory" })
	--
	-- 	vim.keymap.set("n", "<leader>gw", fzf_lua.live_grep_glob, { desc = "Telescope: Live Grep in current workspace" })
	-- 	-- BUG
	-- 	vim.keymap.set("n", "<C-f>", function()
	-- 		fzf_lua.live_grep({
	-- 			search_paths = { vim.fn.expand("%:p") },
	-- 		})
	-- 	end, { desc = "Telescope: Live Grep in current file" })
	--
	-- 	vim.keymap.set("n", "<leader>gc", function()
	-- 		fzf_lua.live_grep({
	-- 			search_paths = { vim.fn.expand("%:p:h") },
	-- 		})
	-- 	end, { desc = "Telescope: Live Grep in current directory" })
	--
	-- 	vim.keymap.set(
	-- 		"n",
	-- 		"<leader>gn",
	-- 		fzf_lua.treesitter,
	-- 		{ desc = "Telescope: Lists Function names, variables, from Treesitter" }
	-- 	)
	--
	-- 	vim.keymap.set("n", "<C-h>", fzf_lua.helptags, {})
	-- 	vim.keymap.set("n", "<leader>b", fzf_lua.buffers, {})
	--
	-- 	-- lsp
	-- 	vim.keymap.set("n", "<leader>cl", fzf_lua.lsp_incoming_calls, { desc = "fzf-lua: lsp incoming calls" })
	-- 	vim.keymap.set("n", "<leader>ca", fzf_lua.lsp_code_actions, { desc = "fzf-lua: lsp code actions" })
	--
	-- 	-- dap
	-- 	-- vim.keymap.set(
	-- 	--     "n",
	-- 	--     "<F5>",
	-- 	--     fzf_lua.dap_configurations,
	-- 	--     { desc = "fzf-lua: dap conf" }
	-- 	-- )
	-- end,
}
